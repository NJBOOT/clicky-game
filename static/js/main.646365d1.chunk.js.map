{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","components/StickyHeader/StickyHeader.js","App.js","index.js"],"names":["Card","props","className","alt","id","src","image","onClick","clickCard","Wrapper","children","Header","StickyHeader","score","highScore","App","state","cards","clicked","gameOver","shuffleArray","array","i","length","j","Math","floor","random","includes","resetGame","clickedArray","incrementScore","setState","newScore","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"40BASeA,MANf,SAAcC,GACV,OACQ,yBAAKC,UAAU,cAAcC,IAAKF,EAAMG,GAAIC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,UAAUP,EAAMG,Q,MCEhGK,MAJf,SAAiBR,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMS,WCW1BC,MAbf,WACI,OACA,yBAAKT,UAAU,aACX,wBAAIA,UAAU,aAAd,gBAGA,uBAAGA,UAAU,QAAb,uE,MCYOU,MAjBf,SAAsBX,GACpB,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,UACb,qCACS,0BAAME,GAAG,SAASH,EAAMY,SAGnC,yBAAKX,UAAU,QACb,0CACc,0BAAME,GAAG,cAAcH,EAAMa,e,OC4EpCC,E,2MAhFbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,UAAW,EACXI,QAAS,GACTC,UAAU,G,EAGZC,aAAe,SAAAC,GACb,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,O,EAM7ChB,UAAY,SAAAJ,GACV,GAAK,EAAKY,MAAME,QAAQU,SAASxB,GAQ1B,EAAKyB,gBAR0B,CAEpC,IAAIC,EAAY,sBAAO,EAAKd,MAAME,SAAlB,CAA2Bd,IAC3C,EAAK2B,iBACL,EAAKC,SAAS,CACZd,QAASY,IAEX,EAAKV,aAAa,EAAKJ,MAAMC,S,EAIjCc,eAAiB,WACf,IAAIE,EAAW,EAAKjB,MAAMH,MAAQ,EAClC,EAAKmB,SAAS,CACZnB,MAAOoB,IAELA,EAAW,EAAKjB,MAAMF,WACxB,EAAKkB,SAAS,CACZlB,UAAWmB,IAGE,KAAbA,IACF,EAAKD,SAAS,CACZb,UAAU,IAEZ,EAAKU,c,EAITA,UAAY,WACV,EAAKG,SAAS,CACZnB,MAAO,EACPC,UAAW,EAAKE,MAAMF,UACtBI,QAAS,GACTC,UAAU,IAEZ,EAAKC,aAAa,EAAKJ,MAAMC,Q,wEAGrB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEJ,MAAOqB,KAAKlB,MAAMH,MAClBC,UAAWoB,KAAKlB,MAAMF,YAExB,kBAAC,EAAD,MACA,yBAAKZ,UAAU,aACb,yBAAKA,UAAU,iBACZgC,KAAKlB,MAAMC,MAAMkB,KAAI,SAAAC,GAAM,OAC1B,kBAAC,EAAD,CACEhC,GAAIgC,EAAOhC,GACXiC,IAAKD,EAAOhC,GACZE,MAAO8B,EAAO9B,MACdE,UAAW,EAAKA,sB,GAvEd8B,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.646365d1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props){\n    return (\n            <img className=\"memory-card\" alt={props.id} src={props.image} onClick={() => props.clickCard(props.id)}/>\n    )\n}\n\nexport default Card ","import React from \"react\";\nimport \"./style.css\"\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\n\nfunction Header() {\n    return (\n    <div className=\"jumbotron\">\n        <h1 className=\"display-4\">\n            Clicky-Game!\n        </h1>\n        <p className=\"lead\">\n            Click on an image to earn points, but don't click more than once!\n        </p>\n    </div>\n    )\n}\n\nexport default Header","import React from \"react\";\nimport \"./style.css\";\n\nfunction StickyHeader(props) {\n  return (\n    <nav className=\"navbar fixed-top\">\n      <div className=\"scores\">\n        <p>\n          Score: <span id=\"score\">{props.score}</span>\n        </p>\n      </div>\n      <div className=\"high\">\n        <p>\n          High Score: <span id=\"high-score\">{props.highScore}</span>\n        </p>\n      </div>\n    </nav>\n  );\n}\n\nexport default StickyHeader;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Card from \"./components/Card/Card\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Header from \"./components/Header/Header\";\nimport StickyHeader from \"./components/StickyHeader/StickyHeader\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  state = {\n    cards,\n    score: 0,\n    highScore: 0,\n    clicked: [],\n    gameOver: false,\n  };\n\n  shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  clickCard = id => {\n    if (!this.state.clicked.includes(id)) {\n      // let clickedArray = this.state.clicked.push(id)\n      let clickedArray = [...this.state.clicked, id];\n      this.incrementScore();\n      this.setState({\n        clicked: clickedArray,\n      });\n      this.shuffleArray(this.state.cards);\n    } else this.resetGame();\n  };\n\n  incrementScore = () => {\n    let newScore = this.state.score + 1;\n    this.setState({\n      score: newScore,\n    });\n    if (newScore > this.state.highScore) {\n      this.setState({\n        highScore: newScore,\n      });\n    }\n    if (newScore === 12) {\n      this.setState({\n        gameOver: true,\n      });\n      this.resetGame();\n    }\n  };\n\n  resetGame = () => {\n    this.setState({\n      score: 0,\n      highScore: this.state.highScore,\n      clicked: [],\n      gameOver: false,\n    });\n    this.shuffleArray(this.state.cards);\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <StickyHeader\n          score={this.state.score}\n          highScore={this.state.highScore}\n        />\n        <Header />\n        <div className=\"container\">\n          <div className=\"img-container\">\n            {this.state.cards.map(friend => (\n              <Card\n                id={friend.id}\n                key={friend.id}\n                image={friend.image}\n                clickCard={this.clickCard}\n              />\n            ))}\n          </div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}